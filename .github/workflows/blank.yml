name: PR Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check for trigger command
        id: check_trigger
        run: |
          COMMANE_TRIGGER="request review"
          if [[ $(jq .comment.body $GITHUB_EVENT_PATH) == *"$COMMANE_TRIGGER"* ]]; then
            echo "::set-output name=trigger::true"
          else
            echo "::set-output name=trigger::false"
          fi

      - name: PR Review
        if: steps.check_trigger.outputs.trigger == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');

            async function reviewPR() {
              const { data: changedFiles } = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              });

              const { data: pullRequest } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              });

              const commit_id = pullRequest.head.sha;
              let changeLog = '';

              for (const file of changedFiles) {
                if (!file.patch) continue;

                changeLog += `File: ${file.filename}\n`;
                const lines = file.patch.split('\n');
                let lineNumber = 0;
                let position = 0;

                for (const line of lines) {
                  if (line.startsWith('@@')) {
                    const match = line.match(/@@ -\d+,?\d* \+(\d+),?\d* @@/);
                    if (match) {
                      lineNumber = parseInt(match[1]) - 1;
                      position = 0;
                    }
                    continue;
                  }

                  position++;

                  if (line.startsWith('+')) {
                    lineNumber++;
                    changeLog += `Added (Line ${lineNumber}): ${line.substring(1)}\n`;
                    if (line.includes('TODO')) {
                      changeLog += `  - Note: 'TODO' comment found. Please address this.\n`;
                    }
                  } else if (line.startsWith('-')) {
                    changeLog += `Removed (Line ${lineNumber}): ${line.substring(1)}\n`;
                  } else {
                    lineNumber++;
                  }
                }
                changeLog += '\n';
              }

              fs.writeFileSync('change_log.txt', changeLog);
              console.log('Change log written to change_log.txt');
            }

            await reviewPR();
      - name: Display Change Log
        if: steps.check_trigger.outputs.trigger == 'true'
        run: cat change_log.txt
